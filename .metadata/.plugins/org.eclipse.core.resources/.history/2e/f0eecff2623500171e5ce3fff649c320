package com.Pandahyun.Main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.material.MaterialData;
import org.bukkit.inventory.Inventory;
import org.bukkit.plugin.java.JavaPlugin;

import com.Pandahyun.Main.Particles;



public class main extends JavaPlugin implements Listener
{

	public HashMap<String, Boolean> Setting = new HashMap<String, Boolean>();
	public HashMap<String, List<Boolean>> Originparticles = new HashMap<String, List<Boolean>>();
	public static HashMap<String, Integer> TaskIds = new HashMap<String, Integer>();
	public static HashMap<String, String> NowParticle = new HashMap<String, String>();
	
	private FileConfiguration CustomConfig = null;
	private File CustomFile = null;
	private File ConfigFile = new File(getDataFolder() + "config.yml");
	
	int i=0,j,nMax;
	Calendar cal = Calendar.getInstance();
	
	public void onEnable()
	{
		getServer().getPluginManager().registerEvents(this, this);
		Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "[K-online]" + ChatColor.WHITE + " 파티클 후원 시스템 기동!");
		if(!ConfigFile.exists())
		{
			getConfig().set("Settings.Particles.Max", 32);
			saveConfig();
		}
		nMax = getConfig().getInt("Settings.Particles.Max");
	}
	
	public void onDisable()
	{
		Bukkit.getConsoleSender().sendMessage(ChatColor.AQUA + "[K-online]" + ChatColor.WHITE + " 파티클 후원 시스템 정상종료!");
	}
	
	public boolean onCommand(CommandSender sender, Command label, String command, String[] args)
	{
		Player player = (Player) sender;
		if(command.equalsIgnoreCase("kparticle")||command.equalsIgnoreCase("kpt"))
		{
			if(args.length > 0)
			{
				if(args[0].equalsIgnoreCase("help"))
				{
					sender.sendMessage("\n" + ChatColor.AQUA + "K-Particle 케이온라인 후원서비스 플러그인 By Pandahyun\n" + ChatColor.RESET
							+ "명령어 보기 - /kpt help"
							+ "\n자신의 후원GUI 열기 - /kpt view"
							+ "\n다른이의 후원GUI 보기[OP] - /kpt view <플레이어명>"
							+ "\n후원 효과 얻기[OP] - /kpt get <플레이어명> <얻는 효과>"
							+ "\n후원 효과 뺐기[OP] - /kpt steal <플레이어명> <뺏는 효과>"
							+ "\n후원 효과 만들기[OP] - /kpt new <효과 이름> <명령어>"
							+ "\n후원 효과 지우기[OP] - /kpt remove <효과 이름>"
							+ "\n후원 파티클 실행하기[OP] - /kpt run <효과 이름>");
				}
				
				else if(args[0].equalsIgnoreCase("view"))
				{
					openGUI(ChatColor.BLUE + "" + ChatColor.BOLD + "K-Particle 케이온라인 후원 서비스", 45, player);
				}
				
				else if(args[0].equalsIgnoreCase("masteriskong"))
				{
					getConfig().set("Players."+sGetU(player)+".Settings.OnOff", true);
					TaskIds.put(sGetU(player), getServer().getScheduler().scheduleSyncRepeatingTask(this, new Particles(this,player), 0, 2));
					player.sendMessage(TaskIds.get(sGetU(player)).toString() + "로 생성됨");
					saveConfig();
				}
				
				else if(args[0].equalsIgnoreCase("stop"))
				{
					if(args.length>1)
						for(Player p : Bukkit.getOnlinePlayers())
							if(p.getName().equalsIgnoreCase(args[1]))
								stopParticle(p);
					else Bukkit.getScheduler().cancelTask(TaskIds.get(sGetU(player)));
				}
				
				else if(args[0].equalsIgnoreCase("set"))
				{
					if(args.length>2)
					{
						if(args[1].equalsIgnoreCase("Particle")) setParticle(player, args[2]);
						else if(args[1].equalsIgnoreCase("Shape")) setShape(player, args[2]);
						else player.sendMessage("[Error] /kpt set particle (or shape) <String>");
					}
					else player.sendMessage("[Error] /kpt set particle (or shape) <String>");
					saveConfig();
				}
			}
			else
			{
				sender.sendMessage("\n" + ChatColor.AQUA + "K-Particle 케이온라인 후원서비스 플러그인 By Pandahyun\n" + ChatColor.RESET
						+ "명령어 보기 - /kpt help"
						+ "\n자신의 후원GUI 열기 - /kpt view"
						+ "\n다른이의 후원GUI 보기[OP] - /kpt view <플레이어명>"
						+ "\n후원 효과 얻기[OP] - /kpt get <플레이어명> <얻는 효과>"
						+ "\n후원 효과 뺐기[OP] - /kpt steal <플레이어명> <뺏는 효과>"
						+ "\n후원 효과 만들기[OP] - /kpt new <효과 이름> <명령어>"
						+ "\n후원 효과 지우기[OP] - /kpt remove <효과 이름>"
						+ "\n후원 파티클 실행하기[OP] - /kpt run <효과 이름>");
			}
		}
		return false;
	}
	
	@EventHandler
	public void onJoinEvent(PlayerJoinEvent e)
	{
		Player p = e.getPlayer();
		if(!getConfig().contains(e.getPlayer().getUniqueId().toString()))
		{
			List<String> pList = new ArrayList<String>();
			getConfig().set("Players."+e.getPlayer().getUniqueId().toString()+".Having.Particles",pList);
			getConfig().set("Players."+e.getPlayer().getUniqueId().toString()+".Having.Shape",pList);
			getConfig().set("Players."+e.getPlayer().getUniqueId().toString()+".Settings.Selected.Shape", "None");
			getConfig().set("Players."+e.getPlayer().getUniqueId().toString()+".Settings.Selected.Particle", "None");
			getConfig().set("Players."+sGetU(p)+".Settings.OnOff", false);
			saveConfig();
		}
		TaskIds.put(sGetU(p), getServer().getScheduler().scheduleSyncRepeatingTask(this, new Particles(this,p), 0, 20));
		e.getPlayer().sendMessage(TaskIds.get(sGetU(p)).toString() + "로 생성됨");
	}
	
	public void onQuitEvent(PlayerQuitEvent e)
	{
		Bukkit.getScheduler().cancelTask(TaskIds.get(sGetU(e.getPlayer())));
		TaskIds.remove(sGetU(e.getPlayer()));
		Logger.getLogger(cal.get(Calendar.YEAR)+ " " +cal.get(Calendar.MONTH)+cal.get(Calendar.YEAR)+e.getPlayer().getName() + "");
	}
	
	//
	
	public void openGUI(String name, int size, Player player)
	{
		Inventory inv = Bukkit.createInventory(player, size, name);
		
		setItem("케이온라인 흥해라", 10, 0, 20, Arrays.asList(ChatColor.WHITE + "하지만 그 실체는" + ChatColor.RED +" 용암"), 2, inv);
		setItem("케이온라인 망해라", 1, 0, 10, Arrays.asList("안녕 프렌즈들",ChatColor.WHITE + "농담인거 알지?"),3,inv);
		
		player.openInventory(inv);
	}
	
	@EventHandler
	public void item_click(PlayerInteractEvent e)
	{
		Player p = e.getPlayer();
		Action a = e.getAction();
		if(a==Action.RIGHT_CLICK_AIR || a==Action.RIGHT_CLICK_BLOCK) p.sendMessage("우클릭 했음");
	    p.getItemInHand().getItemMeta().setDisplayName("hello"); p.sendMessage("hello");
	    if(p.getItemInHand().getType() == Material.STICK) p.sendMessage("STICK");
	}
	
	private void setItem(String Display, int ID, int DATA, int STACK, List<String> lore, int loc, Inventory inv)
	{
		ItemStack item = new MaterialData(ID,(byte)DATA).toItemStack(STACK);
		ItemMeta itemMeta = item.getItemMeta();
		
		itemMeta.setDisplayName(Display);
		itemMeta.setLore(lore);
		item.setItemMeta(itemMeta);
		inv.setItem(loc, item);
	}
	
	public void setParticle(Player player, String Particle)
	{
		getConfig().set("Players."+player.getUniqueId().toString()+".Settings.Selected.Particle", Particle);
		saveConfig();
	}
	
	public void setShape(Player player, String Shape)
	{
		getConfig().set("Players."+player.getUniqueId().toString()+".Settings.Selected.Shape", Shape);
		saveConfig();
	}
	
	public void stopParticle(Player p)
	{
		getServer().getScheduler().cancelTask(TaskIds.get(sGetU(p)));
		p.sendMessage(p.getName() + "의 태스크를 삭제했습니다." + TaskIds.get(sGetU(p)));
		TaskIds.remove(sGetU(p));
	}
	
	
	
	private void reloadCustomConfig()
	{
		if(CustomFile == null) CustomFile = new File(getDataFolder(), "customconfig.yml");
		CustomConfig = YamlConfiguration.loadConfiguration(CustomFile);
		
		InputStream defConfigStream = this.getResource("config.yml");
		if(defConfigStream != null)
		{
			YamlConfiguration defConfig = YamlConfiguration.loadConfiguration(defConfigStream);
			CustomConfig.setDefaults(defConfig);
		}
	}
	
	public void saveCustomConfig()
	{
		if(CustomFile == null || CustomConfig == null) return;
		try {
			getCustomConfig().save(CustomFile);
		} catch (IOException e) {
			Bukkit.getConsoleSender().sendMessage("Can't save config");
		}
	}
	
	public void saveDefaultConfig()
	{
		if(CustomFile == null) CustomFile = new File(getDataFolder(),"customconfig.yml");
		if(!CustomFile.exists()) this.saveResource("config.yml", false);
	}
	
	public FileConfiguration getCustomConfig()
	{
		if(CustomConfig == null) reloadCustomConfig();
		return CustomConfig;
	}
	
	public String sGetU(Player p) // 유니크 아이디 받아오기
	{
		return p.getUniqueId().toString();
	}
}